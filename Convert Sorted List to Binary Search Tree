# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def sortedListToBST(self, head: Optional[ListNode]) -> Optional[TreeNode]:
        lst = []
        while head:
            lst.append(head.val)
            head = head.next
        return self.buildTree(lst)
    def buildTree(self,  lst : Optional[List]) -> Optional[TreeNode]:
        l = len(lst)
        if  l == 0:
            return
        else:
            i = l // 2
            root = TreeNode(lst[i])
            root.left = self.buildTree(lst[0 : i])
            root.right = self.buildTree(lst[i + 1 :])
        return root 
