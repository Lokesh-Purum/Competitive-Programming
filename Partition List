# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def partition(self, head: Optional[ListNode], x: int) -> Optional[ListNode]:
        if not head:
            return head
        lst1 = []
        lst2 = []
        temp = head
        while head:
            y = head.val
            if y < x:
                lst1.append(y)
            else:
                lst2.append(y)
            head = head.next
        temp1 = temp
        head = temp
        i = 0
        l = len(lst1)
        while i < l:
            temp = ListNode()
            temp.val = lst1[i]
            head.next = temp
            head = head.next
            i += 1
        i = 0
        l = len(lst2)
        while i < l:
            temp = ListNode()
            temp.val = lst2[i]
            head.next = temp
            head = head.next
            i += 1
        return temp1.next
